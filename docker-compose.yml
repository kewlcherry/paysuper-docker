version: '3'

services:

### External Services

  paysuper-nginx:
    image: nginx:stable
    container_name: paysuper-nginx
    restart: unless-stopped
    networks:
      - p1devnet
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/notfound.html:/var/www/html/notfound.html:ro

  etcd:
    image: 'bitnami/etcd:latest'
    container_name: etcd
    restart: unless-stopped
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    volumes:
      - etcd_data:/bitnami/etcd      
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      - p1devnet

  paysuper-rabbitmq:
    image: rabbitmq:3.6-management
    container_name: paysuper-rabbitmq
    restart: unless-stopped
    hostname: paysuper-rabbitmq
    networks:
      - p1devnet
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - paysuper-rabbitmq:/var/lib/rabbitmq

  paysuper-postgres:
    image: postgres:9.6
    container_name: paysuper-postgres
    restart: unless-stopped
    hostname: paysuper-postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    networks:
      - p1devnet
    ports:
      - 5432:5432
    volumes:
      - paysuper-postgres:/var/lib/postgresql/data
      - ./initdb/10-pg-create-db.sql:/docker-entrypoint-initdb.d/10-create-db.sql:ro

  paysuper-redis:
    image: redis:5
    container_name: paysuper-redis
    restart: unless-stopped
    hostname: paysuper-redis
    ports:
      - 6379:6379
    networks:
      - p1devnet
    volumes:
      - paysuper-redis:/data/redis

  paysuper-redis-cluster:
    image: grokzen/redis-cluster
    container_name: paysuper-redis-cluster
    restart: unless-stopped
    hostname: paysuper-redis-cluster
    environment:
      IP: "172.18.0.100"
      STANDALONE: "false"
      SENTINEL: "false"
      #MASTERS: 1
      #SLAVES_PER_MASTER: 2
    networks:
      p1devnet:
        ipv4_address: 172.18.0.100
    ports:
      - 7000-7005:7000-7005
      - 5000-5002:5000-5002

  paysuper-mongo:
    image: mongo:4.2
    container_name: paysuper-mongo
    restart: unless-stopped
    hostname: paysuper-mongo
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=${PAYSUPER_MONGO_ROOT_USERNAME}
#      - MONGO_INITDB_ROOT_PASSWORD=${PAYSUPER_MONGO_ROOT_PASSWORD}
#      - MONGO_ROOT_USERNAME=${PAYSUPER_MONGO_ROOT_USERNAME}
#      - MONGO_ROOT_PASSWORD=${PAYSUPER_MONGO_ROOT_PASSWORD}
#      - PAYSUPER_MONGO_HOST=${PAYSUPER_MONGO_HOST}
#      - PAYSUPER_MONGO_PORT=${PAYSUPER_MONGO_PORT}
#      - PAYSUPER_SVC_MONGO_USER=${PAYSUPER_SVC_MONGO_USER}
#      - PAYSUPER_SVC_MONGO_PASS=${PAYSUPER_SVC_MONGO_PASS}
    ports:
      - 27017:27017
    networks:
      - p1devnet
    volumes:
      - paysuper-mongo:/data/db
#      - ./bin/mongo_init_databases.sh:/docker-entrypoint-initdb.d/mongo_init_databases.sh:ro

  centrifugo:
    image: centrifugo/centrifugo:latest
    container_name: paysuper-centrifugo
    restart: unless-stopped
    hostname: paysuper-centrifugo
    environment:
      - CENTRIFUGO_SECRET=secret
      - CENTRIFUGO_ADMIN_PASSWORD=admin
      - CENTRIFUGO_ADMIN_SECRET=secret
    volumes:
      - ./paysuper-webhook-notifier/configs/centrifugo:/centrifugo
    tty: true
    command: centrifugo --admin -c /centrifugo/config.json
    ports:
      - "8000:8000"
    networks:
      - p1devnet

  jsreport:
    image: jsreport/jsreport:2.6.0-full
    container_name: jsreport
    restart: unless-stopped
    networks:
      - p1devnet
    ports:
      - "5488:5488"

volumes:
  paysuper-mongo:
  paysuper-postgres:
  paysuper-rabbitmq:
  paysuper-redis:
  etcd_data:

networks:
  default:
    external:
      name: p1devnet
  p1devnet:
    external: true
